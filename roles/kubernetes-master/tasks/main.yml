---

- name: create directories
  file: path="{{ item }}" state=directory
  with_items:
    - "/etc/kubernetes"
    - "/var/log/kubernetes/audit"
    - "{{ kubernetes_host_dir }}/conf"

- name: copy audit policy config
  template: src=templates/audit-policy.yaml dest="/etc/sysctl.d/audit-policy.yaml"

- name: copy kubernetes configs
  template: src=templates/kubeadm-config.yml.j2 dest="{{ kubernetes_host_dir }}/conf/kubeadm-config.yml"

- name: Checking if kubernetes control pane is running
  shell: kubectl get cs
  register: cluster_health
  ignore_errors: yes

- name: Resetting kubeadm
  shell: kubeadm reset -f
  when: cluster_health.rc != 0

- debug:
    msg:
      - "Kubernetes master has not been initialised yet"
      - "Initializing now..."
  when: cluster_health.rc != 0

- name: Initializing Kubernetes cluster
  # shell: "kubeadm init --config {{ kubernetes_host_dir }}/conf/kubeadm-config.yaml"
  shell: "kubeadm init --pod-network-cidr={{ podSubnet }}"
  register: output
  when: cluster_health.rc != 0

- local_action: copy content={{ output.stdout }} dest={{ kubeadm_join_token_path }}
  when: cluster_health.rc != 0

- name: Copying required files
  shell: |
   mkdir -p $HOME/.kube
   cp -f /etc/kubernetes/admin.conf ~/.kube/config
   chown $(id -u):$(id -g) ~/.kube/config
  when: cluster_health.rc != 0

- debug:
    msg: "{{ ansible_playbook_python }}"

# TODO: OpenShift Python module error
# - name: >-
#     Read network definition template from the Ansible controller file system.
#     Jinja templating will be automatically applied.
#   k8s:
#     state: present
#     definition: "{{ lookup('template','templates/kube-flannel.yml.j2') }}"

- name: copy kubernetes network add-on config
  template: src=templates/kube-flannel.yml.j2 dest="{{ kubernetes_host_dir }}/conf/kube-flannel.yml"
  notify: install network add-on

- meta: flush_handlers
